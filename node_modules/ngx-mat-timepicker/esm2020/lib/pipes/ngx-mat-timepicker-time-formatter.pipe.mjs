import { Pipe } from "@angular/core";
//
import { NgxMatTimepickerUnits } from "../models/ngx-mat-timepicker-units.enum";
//
import { DateTime } from "ts-luxon";
import * as i0 from "@angular/core";
export class NgxMatTimepickerTimeFormatterPipe {
    transform(time, timeUnit) {
        if (time == null || time === '') {
            return time;
        }
        switch (timeUnit) {
            case NgxMatTimepickerUnits.HOUR:
                return DateTime.fromObject({ hour: +time }).toFormat("HH");
            case NgxMatTimepickerUnits.MINUTE:
                return DateTime.fromObject({ minute: +time }).toFormat("mm");
            default:
                throw new Error("no such time unit");
        }
    }
}
NgxMatTimepickerTimeFormatterPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: NgxMatTimepickerTimeFormatterPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
NgxMatTimepickerTimeFormatterPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "15.0.1", ngImport: i0, type: NgxMatTimepickerTimeFormatterPipe, name: "timeFormatter" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: NgxMatTimepickerTimeFormatterPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: "timeFormatter"
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdC10aW1lcGlja2VyLXRpbWUtZm9ybWF0dGVyLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtbWF0LXRpbWVwaWNrZXIvc3JjL2xpYi9waXBlcy9uZ3gtbWF0LXRpbWVwaWNrZXItdGltZS1mb3JtYXR0ZXIucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRCxFQUFFO0FBQ0YsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDaEYsRUFBRTtBQUNGLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxVQUFVLENBQUM7O0FBS3BDLE1BQU0sT0FBTyxpQ0FBaUM7SUFFMUMsU0FBUyxDQUFDLElBQXFCLEVBQUUsUUFBK0I7UUFDNUQsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7WUFDN0IsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUNELFFBQVEsUUFBUSxFQUFFO1lBQ2QsS0FBSyxxQkFBcUIsQ0FBQyxJQUFJO2dCQUMzQixPQUFPLFFBQVEsQ0FBQyxVQUFVLENBQUMsRUFBQyxJQUFJLEVBQUUsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM3RCxLQUFLLHFCQUFxQixDQUFDLE1BQU07Z0JBQzdCLE9BQU8sUUFBUSxDQUFDLFVBQVUsQ0FBQyxFQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksRUFBQyxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQy9EO2dCQUNJLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztTQUM1QztJQUNMLENBQUM7OzhIQWRRLGlDQUFpQzs0SEFBakMsaUNBQWlDOzJGQUFqQyxpQ0FBaUM7a0JBSDdDLElBQUk7bUJBQUM7b0JBQ0YsSUFBSSxFQUFFLGVBQWU7aUJBQ3hCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbi8vXHJcbmltcG9ydCB7IE5neE1hdFRpbWVwaWNrZXJVbml0cyB9IGZyb20gXCIuLi9tb2RlbHMvbmd4LW1hdC10aW1lcGlja2VyLXVuaXRzLmVudW1cIjtcclxuLy9cclxuaW1wb3J0IHsgRGF0ZVRpbWUgfSBmcm9tIFwidHMtbHV4b25cIjtcclxuXHJcbkBQaXBlKHtcclxuICAgIG5hbWU6IFwidGltZUZvcm1hdHRlclwiXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hNYXRUaW1lcGlja2VyVGltZUZvcm1hdHRlclBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuXHJcbiAgICB0cmFuc2Zvcm0odGltZTogbnVtYmVyIHwgc3RyaW5nLCB0aW1lVW5pdDogTmd4TWF0VGltZXBpY2tlclVuaXRzKTogYW55IHtcclxuICAgICAgICBpZiAodGltZSA9PSBudWxsIHx8IHRpbWUgPT09ICcnKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aW1lO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzd2l0Y2ggKHRpbWVVbml0KSB7XHJcbiAgICAgICAgICAgIGNhc2UgTmd4TWF0VGltZXBpY2tlclVuaXRzLkhPVVI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gRGF0ZVRpbWUuZnJvbU9iamVjdCh7aG91cjogK3RpbWV9KS50b0Zvcm1hdChcIkhIXCIpO1xyXG4gICAgICAgICAgICBjYXNlIE5neE1hdFRpbWVwaWNrZXJVbml0cy5NSU5VVEU6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gRGF0ZVRpbWUuZnJvbU9iamVjdCh7bWludXRlOiArdGltZX0pLnRvRm9ybWF0KFwibW1cIik7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJubyBzdWNoIHRpbWUgdW5pdFwiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==