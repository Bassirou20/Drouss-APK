import { EventEmitter } from "@angular/core";
import { FlexibleConnectedPositionStrategy, Overlay, ScrollStrategy } from "@angular/cdk/overlay";
import { NgxMatTimepickerFormatType } from "../../models/ngx-mat-timepicker-format.type";
import { NgxMatTimepickerPeriods } from "../../models/ngx-mat-timepicker-periods.enum";
import { NgxMatTimepickerUnits } from "../../models/ngx-mat-timepicker-units.enum";
import { NgxMatTimepickerClockFace } from "../../models/ngx-mat-timepicker-clock-face.interface";
import { DateTime } from "ts-luxon";
import * as i0 from "@angular/core";
export declare class NgxMatTimepickerPeriodComponent {
    protected _overlay: Overlay;
    activeTimeUnit: NgxMatTimepickerUnits;
    format: NgxMatTimepickerFormatType;
    hours: NgxMatTimepickerClockFace[];
    isPeriodAvailable: boolean;
    maxTime: DateTime;
    meridiems: string[];
    minTime: DateTime;
    minutes: NgxMatTimepickerClockFace[];
    overlayPositionStrategy: FlexibleConnectedPositionStrategy;
    overlayScrollStrategy: ScrollStrategy;
    periodChanged: EventEmitter<NgxMatTimepickerPeriods>;
    selectedHour: number | string;
    selectedPeriod: NgxMatTimepickerPeriods;
    timePeriod: typeof NgxMatTimepickerPeriods;
    constructor(_overlay: Overlay);
    animationDone(): void;
    changePeriod(period: NgxMatTimepickerPeriods): void;
    private _getDisabledTimeByPeriod;
    private _isSwitchPeriodAvailable;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxMatTimepickerPeriodComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgxMatTimepickerPeriodComponent, "ngx-mat-timepicker-period", never, { "activeTimeUnit": "activeTimeUnit"; "format": "format"; "hours": "hours"; "maxTime": "maxTime"; "meridiems": "meridiems"; "minTime": "minTime"; "minutes": "minutes"; "selectedHour": "selectedHour"; "selectedPeriod": "selectedPeriod"; }, { "periodChanged": "periodChanged"; }, never, never, false, never>;
}
