!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).tsLuxon={})}(this,(function(e){"use strict";class t extends Error{}class r extends t{constructor(e){super("Invalid DateTime: "+e.toMessage())}}class s extends t{constructor(e){super("Invalid Duration: "+e.toMessage())}}class n extends t{constructor(e){super("Invalid Interval: "+e.toMessage())}}class i extends t{constructor(e){super("Invalid unit "+e),Object.setPrototypeOf(this,i.prototype)}}class a extends t{constructor(e){super(e+" is an invalid or unknown zone specifier"),Object.setPrototypeOf(this,a.prototype)}}class o extends t{constructor(e){super(e),Object.setPrototypeOf(this,o.prototype)}}class u extends t{constructor(e){super(e),Object.setPrototypeOf(this,u.prototype)}}class l extends t{constructor(){super("Zone is an abstract class"),Object.setPrototypeOf(this,l.prototype)}}function c(...e){e.length}class h{get type(){throw new l}get ianaName(){return this.name}get name(){throw new l}get isUniversal(){throw new l}offsetName(e,t){throw c(e,t),new l}formatOffset(e,t){throw c(e,t),new l}offset(e){throw c(e),new l}equals(e){throw c(e),new l}get isValid(){throw new l}}var d=Intl;let m={};const f={year:0,month:1,day:2,era:3,hour:4,minute:5,second:6};let y={};class _ extends h{static create(e){return y[e]||(y[e]=new _(e)),y[e]}static resetCache(){y={},m={}}static isValidSpecifier(e){return this.isValidZone(e)}static isValidZone(e){if(!e)return!1;try{return new d.DateTimeFormat("en-US",{timeZone:e}).format(),!0}catch(e){return!1}}constructor(e){super(),this._zoneName=e,this._valid=_.isValidZone(e)}get type(){return"iana"}get name(){return this._zoneName}get isUniversal(){return!1}offsetName(e,{format:t,locale:r}={}){return Ue(e,t,r,this.name)}formatOffset(e,t){return Pe(this.offset(e),t)}offset(e){if(e=new Date(e),isNaN(+e))return NaN;var t=function(e){if(!m[e])try{m[e]=new d.DateTimeFormat("en-US",{hour12:!1,timeZone:e,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",era:"short"})}catch(t){throw new a(e)}return m[e]}(this.name);let r;var[t,s,n,i,o,u,l]=(typeof t.formatToParts==typeof isNaN?function(e,t){var r=e.formatToParts(t),s=[];for(let e=0;e<r.length;e++){var{type:n,value:i}=r[e],a=f[n];"era"===n?s[a]=i:Se(a)||(s[a]=parseInt(i,10))}return s}:function(e,t){e=e.format(t).replace(/\u200E/g,"");var[,t,e,r,s,n,i,a]=/(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(e);return[r,t,e,s,n,i,a]})(t,e),o=24===o?0:o,c=(e=+e)%1e3;return(Le({year:(r="BC"===i?1-Math.abs(+t):r)||+t,month:+s,day:+n,hour:+o,minute:+u,second:+l,millisecond:0})-(e-=0<=c?c:1e3+c))/6e4}equals(e){return"iana"===e.type&&e.name===this.name}get isValid(){return this._valid}}const g={year:L="numeric",month:L,day:L};var v={year:L,month:F="short",day:L},p={year:L,month:F,day:L,weekday:F},w={year:L,month:st="long",day:L},O={year:L,month:st,day:L,weekday:st},b={hour:L,minute:L},T={hour:L,minute:L,second:L},S={hour:L,minute:L,second:L,timeZoneName:F},k={hour:L,minute:L,second:L,timeZoneName:st},N={hour:L,minute:L,hourCycle:"h23"},M={hour:L,minute:L,second:L,hourCycle:"h23"},D={hour:L,minute:L,second:L,hourCycle:"h23",timeZoneName:F},E={hour:L,minute:L,second:L,hourCycle:"h23",timeZoneName:st},j={year:L,month:L,day:L,hour:L,minute:L},x={year:L,month:L,day:L,hour:L,minute:L,second:L},I={year:L,month:F,day:L,hour:L,minute:L},V={year:L,month:F,day:L,hour:L,minute:L,second:L},C={year:L,month:F,day:L,weekday:F,hour:L,minute:L},Z={year:L,month:st,day:L,hour:L,minute:L,timeZoneName:F},F={year:L,month:st,day:L,hour:L,minute:L,second:L,timeZoneName:F},z={year:L,month:st,day:L,weekday:st,hour:L,minute:L,timeZoneName:st},L={year:L,month:st,day:L,weekday:st,hour:L,minute:L,second:L,timeZoneName:st};const A=["January","February","March","April","May","June","July","August","September","October","November","December"],q=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],U=["J","F","M","A","M","J","J","A","S","O","N","D"];function W(e){switch(e){case"narrow":return[...U];case"short":return[...q];case"long":return[...A];case"numeric":return["1","2","3","4","5","6","7","8","9","10","11","12"];case"2-digit":return["01","02","03","04","05","06","07","08","09","10","11","12"]}}const $=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],R=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],P=["M","T","W","T","F","S","S"];function H(e){switch(e){case"narrow":return[...P];case"short":return[...R];case"long":return[...$];case"numeric":return["1","2","3","4","5","6","7"]}}const J=["AM","PM"],Y=["Before Christ","Anno Domini"],G=["BC","AD"],B=["B","A"];function Q(e){switch(e){case"narrow":return[...B];case"short":return[...G];case"long":return[...Y]}}let K={},X={};function ee(e,t={}){var r=JSON.stringify([e,t]);let s=X[r];return s||(s=new d.DateTimeFormat(e,t),X[r]=s),s}let te,re={},se={};function ne(e,t,r,s){return("en"===e.listingMode()?r:s)(t)}class ie{constructor(e,t,r){var{padTo:s,floor:n}=r,i=function(e,t){var r={};for(n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var s=0,n=Object.getOwnPropertySymbols(e);s<n.length;s++)t.indexOf(n[s])<0&&Object.prototype.propertyIsEnumerable.call(e,n[s])&&(r[n[s]]=e[n[s]]);return r}(r,["padTo","floor"]);this._padTo=s||0,this._floor=n||!1,(!t||0<Object.keys(i).length)&&(n=Object.assign({useGrouping:!1},r),0<this._padTo&&(n.minimumIntegerDigits=s),this._inf=function(e,t){var r=JSON.stringify([e,t]);let s=re[r];return s||(s=new d.NumberFormat(e,t),re[r]=s),s}(e,n))}format(e){var t;return this._inf?(t=this._floor?Math.floor(e):e,this._inf.format(t)):je(this._floor?Math.floor(e):Ce(e,3),this._padTo)}}class ae{get dtf(){return this._dtf}constructor(e,t,r){let s;this._opts=r,this._opts.timeZone?this._dt=e:"fixed"===e.zone.type?(r=0<=(r=e.offset/60*-1)?"Etc/GMT+"+r:"Etc/GMT"+r,0!==e.offset&&_.create(r).isValid?(s=r,this._dt=e):(s="UTC",this._dt=0===e.offset?e:e.setZone("UTC").plus({minutes:e.offset}),this._originalZone=e.zone)):"system"===e.zone.type?this._dt=e:"iana"===e.zone.type?(this._dt=e,s=e.zone.name):(s="UTC",this._dt=e.setZone("UTC").plus({minutes:e.offset}),this._originalZone=e.zone),r=Object.assign(Object.assign({},this._opts),{timeZone:this._opts.timeZone||s}),this._dtf=ee(t,r)}format(){return this._originalZone?this.formatToParts().map((({value:e})=>e)).join(""):this.dtf.format(this._dt.toJSDate())}formatToParts(){var e=this.dtf.formatToParts(this._dt.toJSDate());return this._originalZone?e.map((e=>{var t;return"timeZoneName"===e.type?(t=this._originalZone.offsetName(this._dt.ts,{locale:this._dt.locale,format:this._opts.timeZoneName}),Object.assign(Object.assign({},e),{value:t})):e})):e}resolvedOptions(){return this._dtf.resolvedOptions()}}class oe{constructor(e,t,r){this._opts=Object.assign({style:"long"},r),!t&&Me()&&(this._rtf=function(e,t={}){var r=JSON.stringify([e,t]);let s=se[r];return s||(s=new d.RelativeTimeFormat(e,t),se[r]=s),s}(e,r))}format(e,t){if(this._rtf)return this._rtf.format(e,t);var[t,e,r="always",s]=[t,e,this._opts.numeric,"long"!==this._opts.style],n={years:["year","yr."],quarters:["quarter","qtr."],months:["month","mo."],weeks:["week","wk."],days:["day","day","days"],hours:["hour","hr."],minutes:["minute","min."],seconds:["second","sec."],milliseconds:[]}[t=Ut.normalizeUnit(t)],i=-1===["hours","minutes","seconds"].indexOf(t);if("auto"===r&&i){var a="days"===t;switch(e){case 1:return a?"tomorrow":"next "+n[0];case-1:return a?"yesterday":"last "+n[0];case 0:return a?"today":"this "+n[0]}}return r=Object.is(e,-0)||e<0,e=1===(i=Math.abs(e)),s=s?!e&&n[2]||n[1]:e?n[0]:t,r?i+` ${s} ago`:`in ${i} `+s}formatToParts(e,t){return this._rtf?this._rtf.formatToParts(e,t):[]}}class ue{get fastNumbers(){return void 0===this._fastNumbersCached&&(this._fastNumbersCached=this._supportsFastNumbers()),this._fastNumbersCached}constructor(e,t,r,s){var[e,n,i]=function(e){if(-1===(t=(e=-1!==(t=e.indexOf("-x-"))?e.substring(0,t):e).indexOf("-u-")))return[e];{let r,s;try{r=ee(e).resolvedOptions(),s=e}catch(n){r=ee(e=e.substring(0,t)).resolvedOptions(),s=e}var{numberingSystem:t,calendar:e}=r;return[s,t,e]}}(e);this.locale=e,this.numberingSystem=t||n,this.outputCalendar=r||i,this._intl=(e=this.locale,t=this.numberingSystem,((n=this.outputCalendar)||t)&&(e.includes("-u-")||(e+="-u"),n&&(e+="-ca-"+n),t)&&(e+="-nu-"+t),e),this._weekdaysCache={format:{},standalone:{}},this._monthsCache={format:{},standalone:{}},this._meridiemCache=void 0,this._eraCache={},this._specifiedLocale=s,this._fastNumbersCached=void 0}static create(e,t,r,s=!1){return s=(e=e||be.defaultLocale)||(s?"en-US":te=te||(new d.DateTimeFormat).resolvedOptions().locale),t=t||be.defaultNumberingSystem,r=r||be.defaultOutputCalendar,new ue(s,t,r,e)}static fromObject({locale:e,numberingSystem:t,outputCalendar:r}={}){return ue.create(e,t,r)}static fromOpts(e){return ue.create(e.locale,e.numberingSystem,e.outputCalendar,e.defaultToEN)}static resetCache(){te=void 0,K={},X={},re={},se={}}clone(e){return e&&0!==Object.getOwnPropertyNames(e).length?ue.create(e.locale||this._specifiedLocale,e.numberingSystem||this.numberingSystem,e.outputCalendar||this.outputCalendar,e.defaultToEN||!1):this}dtFormatter(e,t={}){return new ae(e,this._intl,t)}equals(e){return this.locale===e.locale&&this.numberingSystem===e.numberingSystem&&this.outputCalendar===e.outputCalendar}eras(e){return ne(this,e,Q,(e=>{const t={era:e};return this._eraCache[e]||(this._eraCache[e]=[zr.utc(-40,1,1),zr.utc(2017,1,1)].map((e=>this.extract(e,t,"era")))),this._eraCache[e]}))}extract(e,t,r){if(e=this.dtFormatter(e,t).formatToParts().find((e=>e.type.toLowerCase()===r.toLowerCase())))return e.value;throw new Error("Invalid extract field "+r)}isEnglish(){return!!~["en","en-us"].indexOf(this.locale.toLowerCase())||new d.DateTimeFormat(this._intl).resolvedOptions().locale.startsWith("en-us")}listFormatter(e={}){{var[e,t={}]=[this._intl,e],r=JSON.stringify([e,t]);let s=K[r];return s||(s=new d.ListFormat(e,t),K[r]=s),s}}listingMode(){var e=this.isEnglish(),t=!(null!==this.numberingSystem&&"latn"!==this.numberingSystem||null!==this.outputCalendar&&"gregory"!==this.outputCalendar);return e&&t?"en":"intl"}meridiems(){return ne(this,"long",(()=>J),(()=>(void 0===this._meridiemCache&&(this._meridiemCache=[zr.utc(2016,11,13,9),zr.utc(2016,11,13,19)].map((e=>this.extract(e,{hour:"numeric",hourCycle:"h12"},"dayPeriod")))),this._meridiemCache)))}months(e,t=!1){return ne(this,e,W,(e=>{const r=t?{month:e,day:"numeric"}:{month:e};var s=t?"format":"standalone";return this._monthsCache[s][e]||(this._monthsCache[s][e]=function(e){var t=[];for(let s=1;s<=12;s++){var r=zr.utc(2009,s,1);t.push(e(r))}return t}((e=>this.extract(e,r,"month")))),this._monthsCache[s][e]}))}numberFormatter(e={}){return new ie(this._intl,this.fastNumbers,e)}redefaultToEN(e={}){return this.clone(Object.assign(Object.assign({},e),{defaultToEN:!0}))}redefaultToSystem(e={}){return this.clone(Object.assign(Object.assign({},e),{defaultToEN:!1}))}relFormatter(e={}){return new oe(this._intl,this.isEnglish(),e)}weekdays(e,t=!1){return ne(this,e,H,(e=>{const r=t?{weekday:e,year:"numeric",month:"long",day:"numeric"}:{weekday:e};var s=t?"format":"standalone";return this._weekdaysCache[s][e]||(this._weekdaysCache[s][e]=function(e){var t=[];for(let s=1;s<=7;s++){var r=zr.utc(2016,11,13+s);t.push(e(r))}return t}((e=>this.extract(e,r,"weekday")))),this._weekdaysCache[s][e]}))}_supportsFastNumbers(){return(!this.numberingSystem||"latn"===this.numberingSystem)&&("latn"===this.numberingSystem||!this.locale||this.locale.startsWith("en")||"latn"===d.DateTimeFormat(this._intl).resolvedOptions().numberingSystem)}}let le=null;class ce extends h{static get utcInstance(){return le=null===le?new ce(0):le}get isValid(){return!0}get ianaName(){return 0===this._fixed?"Etc/UTC":"Etc/GMT"+Pe(-this._fixed,"narrow")}get name(){return 0===this._fixed?"UTC":"UTC"+Pe(this._fixed,"narrow")}get type(){return"fixed"}get isUniversal(){return!0}constructor(e){super(),this._fixed=e}static instance(e){return 0===e?ce.utcInstance:new ce(e)}static parseSpecifier(e){return e&&(e=e.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i))?new ce(We(e[1],e[2])):null}offsetName(){return this.name}formatOffset(e,t){return Pe(this._fixed,t)}offset(){return this._fixed}equals(e){return"fixed"===e.type&&e._fixed===this._fixed}}class he extends h{constructor(e){super(),this._zoneName=e,Object.setPrototypeOf(this,he.prototype)}get type(){return"invalid"}get name(){return this._zoneName}get isUniversal(){return!1}offsetName(){return null}formatOffset(){return""}offset(){return NaN}equals(){return!1}get isValid(){return!1}}let de=null;class me extends h{static get instance(){return de=null===de?new me:de}get type(){return"system"}get name(){return(new Intl.DateTimeFormat).resolvedOptions().timeZone}get isUniversal(){return!1}offsetName(e,{format:t,locale:r}){return Ue(e,t,r)}formatOffset(e,t){return Pe(this.offset(e),t)}offset(e){return-new Date(e).getTimezoneOffset()}equals(e){return"system"===e.type}get isValid(){return!0}}const fe=(e,t)=>{var r;return Se(e)||null===e?t:e instanceof h?e:"string"==typeof e?"default"===(r=e.toLowerCase())?t:"local"===r||"system"===r?me.instance:"utc"===r||"gmt"===r?ce.utcInstance:ce.parseSpecifier(r)||_.create(e):ke(e)?ce.instance(e):"object"==typeof e&&"offset"in e&&"function"==typeof e.offset?e:new he(e)};let ye,_e,ge,ve=()=>Date.now(),pe="system",we=60,Oe=!1;class be{static get now(){return ve}static set now(e){ve=e}static set defaultZoneLike(e){pe=e}static set defaultZone(e){pe=e}static get defaultZone(){return fe(pe,me.instance)}static get defaultLocale(){return ye}static set defaultLocale(e){ye=e}static get defaultNumberingSystem(){return _e}static set defaultNumberingSystem(e){_e=e}static get defaultOutputCalendar(){return ge}static set defaultOutputCalendar(e){ge=e}static get twoDigitCutoffYear(){return we}static set twoDigitCutoffYear(e){we=e%100}static get throwOnInvalid(){return Oe}static set throwOnInvalid(e){Oe=e}static resetCaches(){ue.resetCache(),_.resetCache()}}function Te(e){return void 0!==e}function Se(e){return void 0===e}function ke(e){return"number"==typeof e}function Ne(e){return ke(e)&&e%1==0}function Me(){try{return void 0!==d&&!!d.RelativeTimeFormat}catch(e){return!1}}function De(e,t,r){if(0!==e.length)return e.reduce(((e,s)=>(s=[t(s),s],r(e[0],s[0])===e[0]?e:s)),[t(e[0]),e[0]])[1]}function Ee(e,t,r){return Ne(e)&&t<=e&&e<=r}function je(e,t=2){var r=+e<0?"-":"";return r+((e=r?-1*+e:e).toString().length<t?("0".repeat(t)+e).slice(-t):e.toString())}function xe(e){if(e)return parseInt(e,10)}function Ie(e){if(e)return parseFloat(e)}function Ve(e){if(!Se(e)&&null!==e&&""!==e)return e=1e3*parseFloat("0."+e),Math.floor(e)}function Ce(e,t,r=!1){return t=Math.pow(10,t),(r?Math.trunc:Math.round)(e*t)/t}function Ze(e){return e%4==0&&(e%100!=0||e%400==0)}function Fe(e){return Ze(e)?366:365}function ze(e,t){var r=(r=t-1)-12*Math.floor(r/12)+1;return[31,Ze(e+(t-r)/12)?29:28,31,30,31,30,31,31,30,31,30,31][r-1]}function Le(e){let t=Date.UTC(e.year,e.month-1,e.day,e.hour,e.minute,e.second,e.millisecond);return e.year<100&&0<=e.year&&(t=new Date(t)).setUTCFullYear(e.year,e.month-1,e.day),+t}function Ae(e){var t=(e+Math.floor(e/4)-Math.floor(e/100)+Math.floor(e/400))%7;e=((e=e-1)+Math.floor(e/4)-Math.floor(e/100)+Math.floor(e/400))%7;return 4==t||3==e?53:52}function qe(e){return 99<e?e:e>be.twoDigitCutoffYear?1900+e:2e3+e}function Ue(e,t,r,s){return e=new Date(e),t=Object.assign({timeZoneName:t},{hourCycle:"h23",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",timeZone:s}),s=new d.DateTimeFormat(r,t).formatToParts(e).find((e=>"timezonename"===e.type.toLowerCase())),s?s.value:null}function We(e,t){let r=parseInt(e,10);return Number.isNaN(r)&&(r=0),e=parseInt(t,10)||0,60*r+(t=r<0||Object.is(r,-0)?-e:e)}function $e(e){var t=Number(e);if("boolean"==typeof e||""===e||Number.isNaN(t))throw new u("Invalid unit value "+e);return t}function Re(e,t){return Object.keys(e).reduce(((r,s)=>(void 0!==e[s]&&null!==e[s]&&(r[t(s)]=$e(e[s])),r)),{})}function Pe(e,t){var r=Math.trunc(Math.abs(e/60)),s=Math.trunc(Math.abs(e%60)),n=0<=e?"+":"-";switch(t){case"short":return n+je(r,2)+":"+je(s,2);case"narrow":return n+r+(0<s?":"+s:"");case"techie":return n+je(r,2)+je(s,2);default:throw new RangeError(`Value format ${t} is out of range for property format`)}}function He(e){return t=e,["hour","minute","second","millisecond"].reduce(((e,r)=>(e[r]=t[r],e)),{});var t}const Je=["years","quarters","months","weeks","days","hours","minutes","seconds","milliseconds"],Ye=Je.slice(0).reverse(),Ge=["years","months","days","hours","minutes","seconds","milliseconds"];function Be(e,t){let r="";for(const s of e)s.literal?r+=s.val:r+=t(s.val);return r}const Qe={D:g,DD:v,DDD:w,DDDD:O,t:b,tt:T,ttt:S,tttt:k,T:N,TT:M,TTT:D,TTTT:E,f:j,ff:I,fff:Z,ffff:z,F:x,FF:V,FFF:F,FFFF:L};class Ke{constructor(e,t){this._opts=t,this._loc=e,this._systemLoc=void 0}static create(e,t={}){return new Ke(e,t)}static macroTokenToFormatOpts(e){return Qe[e]}static parseFormat(e){let t=null,r="",s=!1;var n=[];for(let a=0;a<e.length;a++){var i=e.charAt(a);"'"===i?(0<r.length&&n.push({literal:s||/^\s+$/.test(r),val:r}),t=null,r="",s=!s):s||i===t?r+=i:(0<r.length&&n.push({literal:/^\s+$/.test(r),val:r}),r=i,t=i)}return 0<r.length&&n.push({literal:s||/^\s+$/.test(r),val:r}),n}dtFormatter(e,t={}){return this._loc.dtFormatter(e,Object.assign(Object.assign({},this._opts),t))}formatDateTime(e,t){return this.dtFormatter(e,t).format()}formatDateTimeFromString(e,t){const r="en"===this._loc.listingMode(),s=this._loc.outputCalendar&&"gregory"!==this._loc.outputCalendar,n=(t,r)=>this._loc.extract(e,t,r),i=t=>e.isOffsetFixed&&0===e.offset&&t.allowZ?"Z":e.isValid?e.zone.formatOffset(e.ts,t.format):"",a=(t,s)=>{return r?(i=e,W(t)[i.month-1]):n(s?{month:t}:{month:t,day:"numeric"},"month");var i},o=(t,s)=>{return r?(i=e,H(t)[i.weekday-1]):n(s?{weekday:t}:{weekday:t,month:"long",day:"numeric"},"weekday");var i},u=t=>{var r=Ke.macroTokenToFormatOpts(t);return r?this.formatWithSystemDefault(e,r):t},l=t=>{return r?(s=e,Q(t)[s.year<0?0:1]):n({era:t},"era");var s};return Be(Ke.parseFormat(t),(t=>{switch(t){case"S":return this.num(e.millisecond);case"u":case"SSS":return this.num(e.millisecond,3);case"s":return this.num(e.second);case"ss":return this.num(e.second,2);case"uu":return this.num(Math.floor(e.millisecond/10),2);case"uuu":return this.num(Math.floor(e.millisecond/100));case"m":return this.num(e.minute);case"mm":return this.num(e.minute,2);case"h":return this.num(e.hour%12==0?12:e.hour%12);case"hh":return this.num(e.hour%12==0?12:e.hour%12,2);case"H":return this.num(e.hour);case"HH":return this.num(e.hour,2);case"Z":return i({format:"narrow",allowZ:this._opts.allowZ});case"ZZ":return i({format:"short",allowZ:this._opts.allowZ});case"ZZZ":return i({format:"techie",allowZ:this._opts.allowZ});case"ZZZZ":return e.zone.offsetName(e.ts,{format:"short",locale:this._loc.locale})||"";case"ZZZZZ":return e.zone.offsetName(e.ts,{format:"long",locale:this._loc.locale})||"";case"z":return e.zoneName||"";case"a":return r?J[e.hour<12?0:1]:n({hour:"numeric",hourCycle:"h12"},"dayPeriod");case"d":return s?n({day:"numeric"},"day"):this.num(e.day);case"dd":return s?n({day:"2-digit"},"day"):this.num(e.day,2);case"c":case"E":return this.num(e.weekday);case"ccc":return o("short",!0);case"cccc":return o("long",!0);case"ccccc":return o("narrow",!0);case"EEE":return o("short",!1);case"EEEE":return o("long",!1);case"EEEEE":return o("narrow",!1);case"L":return s?n({month:"numeric",day:"numeric"},"month"):this.num(e.month);case"LL":return s?n({month:"2-digit",day:"numeric"},"month"):this.num(e.month,2);case"LLL":return a("short",!0);case"LLLL":return a("long",!0);case"LLLLL":return a("narrow",!0);case"M":return s?n({month:"numeric"},"month"):this.num(e.month);case"MM":return s?n({month:"2-digit"},"month"):this.num(e.month,2);case"MMM":return a("short",!1);case"MMMM":return a("long",!1);case"MMMMM":return a("narrow",!1);case"y":return s?n({year:"numeric"},"year"):this.num(e.year);case"yy":return s?n({year:"2-digit"},"year"):this.num(parseInt(e.year.toString().slice(-2),10),2);case"yyyy":return s?n({year:"numeric"},"year"):this.num(e.year,4);case"yyyyyy":return s?n({year:"numeric"},"year"):this.num(e.year,6);case"G":return l("short");case"GG":return l("long");case"GGGGG":return l("narrow");case"kk":return this.num(parseInt(e.weekYear.toString().slice(-2),10),2);case"kkkk":return this.num(e.weekYear,4);case"W":return this.num(e.weekNumber);case"WW":return this.num(e.weekNumber,2);case"o":return this.num(e.ordinal);case"ooo":return this.num(e.ordinal,3);case"q":return this.num(e.quarter);case"qq":return this.num(e.quarter,2);case"X":return this.num(Math.floor(e.ts/1e3));case"x":return this.num(e.ts);default:return u(t)}}))}formatDateTimeParts(e,t){return this.dtFormatter(e,t).formatToParts()}formatDurationFromString(e,t){const r=e=>{switch(e[0]){case"S":return"milliseconds";case"s":return"seconds";case"m":return"minutes";case"h":return"hours";case"d":return"days";case"M":return"months";case"y":return"years";default:return}};var s,n=(t=Ke.parseFormat(t)).reduce(((e,{literal:t,val:r})=>t?e:e.concat(r)),[]);e=e.shiftTo(...n.map(r).filter((e=>!!e)));return Be(t,(s=e,e=>{var t=r(e);return t?this.num(s.get(t),e.length):e}))}formatInterval(e,t={}){if(e.isValid)return this.dtFormatter(e.start,t).dtf.formatRange(e.start.toJSDate(),e.end.toJSDate());throw Error("Invalid Interval provided!")}formatWithSystemDefault(e,t){return void 0===this._systemLoc&&(this._systemLoc=this._loc.redefaultToSystem()),this._systemLoc.dtFormatter(e,Object.assign(Object.assign({},this._opts),t)).format()}num(e,t=0){var r;return this._opts.forceSimple?je(e,t):(r=Object.assign({},this._opts),0<t&&(r.padTo=t),this._loc.numberFormatter(r).format(e))}resolvedOptions(e,t={}){return this.dtFormatter(e,t).resolvedOptions()}}function Xe(...e){return e=e.reduce(((e,t)=>e+t.source),""),RegExp(`^${e}$`)}function et(...e){return t=>e.reduce((([e,r,s],n)=>{var[n,s,i]=n(t,s);return[Object.assign(Object.assign({},e),n),s||r,i]}),[{},null,1]).slice(0,2)}function tt(e,...t){if(null!=e)for(var[r,s]of t)if(r=r.exec(e))return s(r);return[null,null]}function rt(...e){return(t,r)=>{var s={};let n;for(n=0;n<e.length;n++)s[e[n]]=xe(t[r+n]);return[s,null,r+n]}}var st=/[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/,nt=/(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/,it=/(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/,at=RegExp(it.source+`(?:${nt.source}?(?:\\[(${st.source})\\])?)?`),ot=RegExp(`(?:T${at.source})?`),ut=rt("weekYear","weekNumber","weekday"),lt=rt("year","ordinal");nt=RegExp(it.source+` ?(?:${nt.source}|(${st.source}))?`),st=RegExp(`(?: ${nt.source})?`);function ct(e,t,r){return Se(e[t])?r:xe(e[t])}function ht(e,t){return[{hour:ct(e,t,0),minute:ct(e,t+1,0),second:ct(e,t+2,0),millisecond:Ve(e[t+3])},null,t+4]}function dt(e,t){var r=!e[t]&&!e[t+1];e=We(e[t+1],e[t+2]);return[{},r?null:ce.instance(e),t+3]}function mt(e,t){return[{},e[t]?_.create(e[t]):null,t+1]}const ft=RegExp(`^T?${it.source}$`),yt=/^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;function _t(e){var[e,t,r,s,n,i,a,o,u]=e;const l=e.startsWith("-");e=!!o&&o.startsWith("-");var c=(e,t=!1)=>"number"==typeof e&&(t||e&&l)?-e:e;return[{years:c(Ie(t)),months:c(Ie(r)),weeks:c(Ie(s)),days:c(Ie(n)),hours:c(Ie(i)),minutes:c(Ie(a)),seconds:c(Ie(o),"-0"===o),milliseconds:c(Ve(u),e)}]}const gt={GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function vt(e,t,r,s,n,i,a){let o;return e&&(o=3<e.length?$.indexOf(e)+1:R.indexOf(e)+1),{year:2===t.length?qe(xe(t)):xe(t),month:q.indexOf(r)+1,day:xe(s),hour:xe(n),minute:xe(i),second:xe(a),weekday:o}}const pt=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;function wt(e){var[,e,t,r,s,n,i,a,o,u,l,c]=e;e=vt(e,s,r,t,n,i,a);let h;return h=o?gt[o]:u?0:We(l,c),[e,new ce(h)]}const Ot=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,bt=/^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,Tt=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;function St(e){var[,e,t,r,s,n,i,a]=e;return[vt(e,s,r,t,n,i,a),ce.utcInstance]}function kt(e){var[,e,t,r,s,n,i,a]=e;return[vt(e,a,t,r,s,n,i),ce.utcInstance]}const Nt=Xe(/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/,ot),Mt=Xe(/(\d{4})-?W(\d\d)(?:-?(\d))?/,ot),Dt=Xe(/(\d{4})-?(\d{3})/,ot),Et=Xe(at),jt=et((function(e,t){return[{year:ct(e,t,0),month:ct(e,t+1,1),day:ct(e,t+2,1)},null,t+3]}),ht,dt,mt),xt=et(ut,ht,dt,mt),It=et(lt,ht,dt,mt),Vt=et(ht,dt,mt),Ct=Xe(/(\d{4})-(\d\d)-(\d\d)/,st),Zt=Xe(nt),Ft=et(ht,dt,mt);class zt{constructor(e,t){this.reason=e,this.explanation=t,this._formattedExplanation="",t&&(this._formattedExplanation=": "+t)}toMessage(){return""+this.reason+this._formattedExplanation}}it={weeks:{days:7,hours:168,minutes:10080,seconds:604800,milliseconds:6048e5},days:{hours:24,minutes:1440,seconds:86400,milliseconds:864e5},hours:{minutes:60,seconds:3600,milliseconds:36e5},minutes:{seconds:60,milliseconds:6e4},seconds:{milliseconds:1e3}};const Lt=Object.assign({years:{quarters:4,months:12,weeks:52,days:365,hours:8760,minutes:525600,seconds:31536e3,milliseconds:31536e6},quarters:{months:3,weeks:13,days:91,hours:2184,minutes:131040,seconds:7862400,milliseconds:78624e5},months:{weeks:4,days:30,hours:720,minutes:43200,seconds:2592e3,milliseconds:2592e6}},it);ot=365.2425,at=30.436875;const At=Object.assign({years:{quarters:4,months:12,weeks:ot/7,days:ot,hours:24*ot,minutes:525949.2,seconds:525949.2*60,milliseconds:525949.2*60*1e3},quarters:{months:3,weeks:ot/28,days:ot/4,hours:24*ot/4,minutes:131487.3,seconds:525949.2*60/4,milliseconds:7889237999.999999},months:{weeks:at/7,days:at,hours:24*at,minutes:43829.1,seconds:2629746,milliseconds:2629746e3}},it);function qt(e,t){var r;let s=null!=(r=t.milliseconds)?r:0;for(const r of Ye.slice(1))t[r]&&(s+=t[r]*e[r].milliseconds);return s}class Ut{static get _INVALID(){return"Invalid Duration"}get conversionAccuracy(){return this._conversionAccuracy}get days(){return this.isValid?this._values.days||0:NaN}get hours(){return this.isValid?this._values.hours||0:NaN}get invalidExplanation(){return this._invalid?this._invalid.explanation:null}get invalidReason(){return this._invalid?this._invalid.reason:null}get isValid(){return null===this._invalid}get locale(){return this.isValid?this._loc.locale:void 0}get matrix(){return this._matrix}get milliseconds(){return this.isValid?this._values.milliseconds||0:NaN}get minutes(){return this.isValid?this._values.minutes||0:NaN}get months(){return this.isValid?this._values.months||0:NaN}get numberingSystem(){return this.isValid?this._loc.numberingSystem:void 0}get quarters(){return this.isValid?this._values.quarters||0:NaN}get seconds(){return this.isValid?this._values.seconds||0:NaN}get weeks(){return this.isValid?this._values.weeks||0:NaN}get years(){return this.isValid?this._values.years||0:NaN}constructor(e){let t,r;t="longterm"===e.conversionAccuracy||!1?(r="longterm",At):(r="casual",Lt),e.matrix&&(t=e.matrix),this._values=e.values||{},this._loc=e.loc||ue.create(),this._conversionAccuracy=r,this._invalid=e.invalid||null,this._matrix=t,this._isLuxonDuration=!0}static fromDurationLike(e){if(ke(e))return Ut.fromMillis(e);if(Ut.isDuration(e))return e;if("object"==typeof e)return Ut.fromObject(e);throw new u(`Unknown duration argument ${e} of type `+typeof e)}static fromISO(e,t){var[r]=tt(e,[yt,_t]);return r?Ut.fromObject(r,t):Ut.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static fromISOTime(e,t={}){var[r]=tt(e,[ft,et(ht)]);return r?Ut.fromObject(r,t):Ut.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static fromMillis(e,t={}){return Ut.fromObject({milliseconds:e},t)}static fromObject(e,t={}){if(null==e||"object"!=typeof e)throw new u("Duration.fromObject: argument expected to be an object, got "+(null===e?"null":typeof e));return new Ut({values:Re(e,Ut.normalizeUnit),loc:ue.fromObject(t),conversionAccuracy:t.conversionAccuracy,matrix:t.matrix})}static invalid(e,t){if(!e)throw new u("need to specify a reason the Duration is invalid");if(e=e instanceof zt?e:new zt(e,t),be.throwOnInvalid)throw new s(e);return new Ut({invalid:e})}static isDuration(e){return!!e&&e._isLuxonDuration||!1}static normalizeUnit(e){var t={year:"years",years:"years",quarter:"quarters",quarters:"quarters",month:"months",months:"months",week:"weeks",weeks:"weeks",day:"days",days:"days",hour:"hours",hours:"hours",minute:"minutes",minutes:"minutes",second:"seconds",seconds:"seconds",millisecond:"milliseconds",milliseconds:"milliseconds"}[e];if(t)return t;throw new i(e)}as(e){return this.shiftTo(e).get(e)}equals(e){if(!this.isValid||!e.isValid)return!1;if(!this._loc.equals(e._loc))return!1;for(const s of Je)if(t=this._values[s],r=e._values[s],!(void 0===t||0===t?void 0===r||0===r:t===r))return!1;var t,r;return!0}get(e){return this[Ut.normalizeUnit(e)]}getMaxUnit(e=!1){e=e?Ge:Je;const t=this.shiftTo(...e).toObject();return e.find((e=>0<(t[e]||0)))||Ye[0]}mapUnits(e){if(!this.isValid)return this;const t={};return Object.keys(this._values).forEach((r=>{t[r]=$e(e(this._values[r],r))})),this._clone(this,{values:t},!0)}minus(e){return this.isValid?(e=Ut.fromDurationLike(e),this.plus(e.negate())):this}negate(){if(!this.isValid)return this;const e={};return Object.keys(this._values).forEach((t=>{e[t]=0===this._values[t]?0:-this._values[t]})),this._clone(this,{values:e},!0)}normalize(){if(!this.isValid)return this;var e=this.toObject();if(0<=this.valueOf()){{var t=this._matrix,r=e;const s=qt(t,r)<0?-1:1;Ye.reduce(((e,n)=>{var i,a;return Se(r[n])?e:(e&&(a=r[e]*s,i=t[n][e],a=Math.floor(a/i),r[n]+=a*s,r[e]-=a*i*s),n)}),null)}return this._clone(this,{values:e},!0)}return this.negate().normalize().negate()}plus(e){if(!this.isValid)return this;const t=Ut.fromDurationLike(e),r={};return Je.forEach((e=>{void 0===t._values[e]&&void 0===this._values[e]||(r[e]=t.get(e)+this.get(e))})),this._clone(this,{values:r},!0)}reconfigure({locale:e,numberingSystem:t,conversionAccuracy:r,matrix:s}={}){return e=this._loc.clone({locale:e,numberingSystem:t}),this._clone(this,{loc:e,matrix:s,conversionAccuracy:r})}rescale(){var e;return this.isValid?([e={}]=[this.normalize().shiftToAll().toObject()],e=Object.entries(e).reduce(((e,[t,r])=>(0!==r&&(e[t]=r),e)),{}),this._clone(this,{values:e},!0)):this}set(e){return this.isValid?(e=Object.assign(Object.assign({},this._values),Re(e,Ut.normalizeUnit)),this._clone(this,{values:e})):this}shiftTo(...e){if(!this.isValid||0===e.length)return this;e=e.map((e=>Ut.normalizeUnit(e)));const t={},r={},s=this.toObject();let n;return Je.forEach((i=>{if(0<=e.indexOf(i)){n=i;let e=0;Object.keys(r).forEach((t=>{e+=this._matrix[t][i]*r[t],r[t]=0})),ke(s[i])&&(e+=s[i]);var a=Math.trunc(e);t[i]=a,r[i]=(1e3*e-1e3*a)/1e3}else ke(s[i])&&(r[i]=s[i])})),Object.keys(r).forEach((e=>{var s=r[e];0!==s&&(t[n]+=e===n?s:s/this._matrix[n][e])})),this._clone(this,{values:t},!0).normalize()}shiftToAll(){return this.isValid?this.shiftTo("years","months","weeks","days","hours","minutes","seconds","milliseconds"):this}toFormat(e,t={floor:!0}){return t=Object.assign(Object.assign({},t),{floor:!1!==t.round&&!1!==t.floor}),this.isValid?Ke.create(this._loc,t).formatDurationFromString(this,e):Ut._INVALID}toHuman(e={}){if(!this.isValid)return Ut._INVALID;var t=this.getMaxUnit(!0),r=e.onlyHumanUnits?Ge:Je;const s=this.shiftTo(...r.slice(r.indexOf(t))).toObject();return t=r.map((t=>{var r=s[t];return Se(r)||0===r?null:this._loc.numberFormatter(Object.assign(Object.assign({style:"unit",unitDisplay:"long"},e),{unit:t.slice(0,-1)})).format(r)})).filter((e=>e)),r=Object.assign({type:"conjunction",style:e.listStyle||"narrow"},e),this._loc.listFormatter(r).format(t)}toISO(){if(!this.isValid)return null;let e="P";return 0!==this.years&&(e+=this.years+"Y"),0===this.months&&0===this.quarters||(e+=this.months+3*this.quarters+"M"),0!==this.weeks&&(e+=this.weeks+"W"),0!==this.days&&(e+=this.days+"D"),0===this.hours&&0===this.minutes&&0===this.seconds&&0===this.milliseconds||(e+="T"),0!==this.hours&&(e+=this.hours+"H"),0!==this.minutes&&(e+=this.minutes+"M"),0===this.seconds&&0===this.milliseconds||(e+=Ce(this.seconds+this.milliseconds/1e3,3)+"S"),"P"===e&&(e+="T0S"),e}toISOTime(e={}){var t;return!this.isValid||(t=this.toMillis())<0||864e5<=t?null:(e=Object.assign(Object.assign({suppressMilliseconds:!1,suppressSeconds:!1,includePrefix:!1,format:"extended"},e),{includeOffset:!1}),zr.fromMillis(t,{zone:"UTC"}).toISOTime(e))}toJSON(){return this.toISO()}toMillis(){return qt(this.matrix,this._values)}toObject(){return this.isValid?Object.assign({},this._values):{}}toString(){return this.toISO()}valueOf(){return this.toMillis()}_clone(e,t,r=!1){return r={values:r?t.values:Object.assign(Object.assign({},e._values),t.values||{}),loc:e._loc.clone(t.loc),conversionAccuracy:t.conversionAccuracy||e.conversionAccuracy,matrix:t.matrix||e.matrix},new Ut(r)}}const Wt="Invalid Interval";function $t(e){if(zr.isDateTime(e))return e;if(e&&e.valueOf&&ke(e.valueOf()))return zr.fromJSDate(e);if(e&&"object"==typeof e)return zr.fromObject(e);throw new u(`Unknown datetime argument: ${e}, of type `+typeof e)}class Rt{get invalidReason(){return this._invalid?this._invalid.reason:null}get isValid(){return null===this.invalidReason}constructor(e){this._s=e.start,this._e=e.end,this._invalid=e.invalid||null,this._isLuxonInterval=!0}get start(){return this.isValid?this._s:null}get end(){return this.isValid?this._e:null}static fromDateTimes(e,t){return function(e,t){return e&&e.isValid?t&&t.isValid?t<e?Rt.invalid("end before start",`The end of an interval must be after its start, but you had start=${e.toISO()} and end=`+t.toISO()):void 0:Rt.invalid("missing or invalid end"):Rt.invalid("missing or invalid start")}(e=$t(e),t=$t(t))||new Rt({start:e,end:t})}static after(e,t){return t=Ut.fromDurationLike(t),e=$t(e),new Rt({start:e,end:e?e.plus(t):void 0})}static before(e,t){return t=Ut.fromDurationLike(t),e=$t(e),new Rt({start:e?e.minus(t):void 0,end:e})}static fromISO(e,t={}){var[r,s]=(e||"").split("/",2);if(r&&s){let e,i,a,o;try{e=zr.fromISO(r,t),i=e.isValid}catch(s){i=!1}try{a=zr.fromISO(s,t),o=a.isValid}catch(s){o=!1}if(i&&o)return Rt.fromDateTimes(e,a);if(i){var n=Ut.fromISO(s,t);if(n.isValid)return Rt.after(e,n)}else if(o&&(n=Ut.fromISO(r,t)).isValid)return Rt.before(a,n)}return Rt.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static invalid(e,t){if(!e)throw new u("need to specify a reason the Interval is invalid");if(e=e instanceof zt?e:new zt(e,t),be.throwOnInvalid)throw new n(e);return new Rt({invalid:e})}static isInterval(e){return!!e&&e._isLuxonInterval||!1}static merge(e){var[e,t]=e.sort(((e,t)=>e._s.valueOf()-t._s.valueOf())).reduce((([e,t],r)=>t?t.overlaps(r)||t.abutsStart(r)?[e,t.union(r)]:[e.concat([t]),r]:[e,r]),[[],null]);return t&&e.push(t),e}static xor(e){let t=null,r=0;var s=[];e=e.map((e=>[{time:e._s,type:"s"},{time:e._e,type:"e"}]));for(const n of Array.prototype.concat(...e).sort(((e,t)=>+e.time-+t.time)))r+="s"===n.type?1:-1,t=1===r?n.time:(t&&t.valueOf()!==n.time.valueOf()&&s.push(Rt.fromDateTimes(t,n.time)),null);return Rt.merge(s)}length(e="milliseconds"){return this.toDuration(e).get(e)}count(e="milliseconds"){var t,r;return this.isValid?(t=this.start.startOf(e),r=this.end.startOf(e),Math.floor(r.diff(t,e).get(e))+ +(r.valueOf()!==this.end.valueOf())):NaN}hasSame(e){return!!this.isValid&&(this.isEmpty()||this._e.minus(1).hasSame(this._s,e))}isEmpty(){return this._s.valueOf()===this._e.valueOf()}isAfter(e){return!!this.isValid&&this._s>e}isBefore(e){return!!this.isValid&&this._e<=e}contains(e){return this._s<=e&&this._e>e}set({start:e,end:t}={}){return this.isValid?Rt.fromDateTimes(e||this._s,t||this._e):this}splitAt(...e){var t=e.map($t).filter((e=>this.contains(e))).sort(),r=[];let s=this._s,n=0;for(;s<this._e;){var i=+(i=t[n]||this._e)>+this._e?this._e:i;r.push(Rt.fromDateTimes(s,i)),s=i,n+=1}return r}splitBy(e){var t=Ut.fromDurationLike(e);if(!this.isValid||!t.isValid||0===t.as("milliseconds"))return[];let r,s=this._s,n=1;for(var i=[];s<this._e;){var a=this.start.plus(t.mapUnits((e=>e*n)));r=+a>+this._e?this._e:a,i.push(Rt.fromDateTimes(s,r)),s=r,n+=1}return i}divideEqually(e){return this.isValid?this.splitBy({milliseconds:this.length()/e}).slice(0,e):[]}overlaps(e){return this._e>e._s&&this._s<e._e}abutsStart(e){return+this._e==+e._s}abutsEnd(e){return+e._e==+this._s}engulfs(e){return!!this.isValid&&this._s<=e._s&&this._e>=e._e}equals(e){return!(!this.isValid||!e.isValid)&&this._s.equals(e._s)&&this._e.equals(e._e)}intersection(e){var t;return this.isValid?(t=(this._s>e._s?this:e)._s,(e=(this._e<e._e?this:e)._e)<=t?null:Rt.fromDateTimes(t,e)):this}union(e){var t;return this.isValid?(t=(this._s<e._s?this:e)._s,e=(this._e>e._e?this:e)._e,Rt.fromDateTimes(t,e)):this}difference(...e){return Rt.xor([this].concat(e)).map((e=>this.intersection(e))).filter((e=>e&&!e.isEmpty()))}toString(){return this.isValid?`[${this._s.toISO()} – ${this._e.toISO()})`:Wt}toLocaleString(e=g,t={}){return this.isValid?Ke.create(this._s.loc.clone(t),e).formatInterval(this):Wt}toISO(e={}){return this.isValid?this._s.toISO(e)+"/"+this._e.toISO(e):Wt}toISODate(){return this.isValid?this._s.toISODate()+"/"+this._e.toISODate():Wt}toISOTime(e={}){return this.isValid?this._s.toISOTime(e)+"/"+this._e.toISOTime(e):Wt}toFormat(e,{separator:t=" - "}={}){return this.isValid?""+this._s.toFormat(e)+t+this._e.toFormat(e):Wt}toDuration(e="milliseconds",t={}){return this.isValid?this._e.diff(this._s,e,t):Ut.invalid(this._invalid.reason)}mapEndpoints(e){return Rt.fromDateTimes(e(this._s),e(this._e))}}class Pt{static eras(e="short",{locale:t}={}){return ue.create(t,void 0,"gregory").eras(e)}static features(){return{relative:Me()}}static hasDST(e=be.defaultZone){var t=zr.now().setZone(e).set({month:12});return!e.isUniversal&&t.offset!==t.set({month:6}).offset}static isValidIANAZone(e){return _.isValidZone(e)}static meridiems({locale:e}={}){return ue.create(e).meridiems()}static months(e="long",{locale:t=null,locObj:r=null,numberingSystem:s=null,outputCalendar:n="gregory"}={}){return(r||ue.create(t,s,n)).months(e)}static monthsFormat(e="long",{locale:t,locObj:r,numberingSystem:s,outputCalendar:n="gregory"}={}){return(r||ue.create(t,s,n)).months(e,!0)}static normalizeZone(e){return fe(e,be.defaultZone)}static weekdays(e="long",{locale:t,locObj:r,numberingSystem:s}={}){return(r||ue.create(t,s)).weekdays(e)}static weekdaysFormat(e="long",{locale:t,locObj:r,numberingSystem:s}={}){return(r||ue.create(t,s)).weekdays(e,!0)}}function Ht(e,t){var r=e=>e.toUTC(0,{keepLocalTime:!0}).startOf("days").valueOf();t=r(t)-r(e);return Math.floor(Ut.fromMillis(t).as("days"))}const Jt={arab:"[٠-٩]",arabext:"[۰-۹]",bali:"[᭐-᭙]",beng:"[০-৯]",deva:"[०-९]",fullwide:"[０-９]",gujr:"[૦-૯]",hanidec:"[〇|一|二|三|四|五|六|七|八|九]",khmr:"[០-៩]",knda:"[೦-೯]",laoo:"[໐-໙]",limb:"[᥆-᥏]",mlym:"[൦-൯]",mong:"[᠐-᠙]",mymr:"[၀-၉]",orya:"[୦-୯]",tamldec:"[௦-௯]",telu:"[౦-౯]",thai:"[๐-๙]",tibt:"[༠-༩]",latn:"\\d"},Yt={arab:[1632,1641],arabext:[1776,1785],bali:[6992,7001],beng:[2534,2543],deva:[2406,2415],fullwide:[65296,65303],gujr:[2790,2799],khmr:[6112,6121],knda:[3302,3311],laoo:[3792,3801],limb:[6470,6479],mlym:[3430,3439],mong:[6160,6169],mymr:[4160,4169],orya:[2918,2927],tamldec:[3046,3055],telu:[3174,3183],thai:[3664,3673],tibt:[3872,3881]},Gt=Jt.hanidec.replace(/[\[|\]]/g,"").split("");function Bt(e,t=""){return new RegExp(""+Jt[e.numberingSystem||"latn"]+t)}function Qt(e,t=(e=>e)){return{regex:e,deser:([e])=>t(function(e){var t=parseInt(e,10);if(!isNaN(t))return t;let r="";for(let t=0;t<e.length;t++){var s=e.charCodeAt(t);if(-1!==e[t].search(Jt.hanidec))r+=Gt.indexOf(e[t]);else for(const e in Yt){var[n,i]=Yt[e];if(n<=s&&s<=i){r+=s-n;break}}}return parseInt(r,10)}(e))}}const Kt=`[ ${String.fromCharCode(160)}]`,Xt=new RegExp(Kt,"g");function er(e){return e.replace(/\./g,"\\.?").replace(Xt,Kt)}function tr(e){return e.replace(/\./g,"").replace(Xt," ").toLowerCase()}function rr(e,t){return{regex:RegExp(e.map(er).join("|")),deser:([r])=>e.findIndex((e=>tr(r)===tr(e)))+t}}function sr(e,t){return{regex:e,deser:([,e,t])=>We(e,t),groups:t}}function nr(e){return{regex:e,deser:([e])=>e}}const ir={year:{"2-digit":"yy",numeric:"yyyyy"},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM"},day:{numeric:"d","2-digit":"dd"},weekday:{short:"EEE",long:"EEEE"},dayPeriod:"a",hour12:{numeric:"h","2-digit":"hh"},hour24:{numeric:"H","2-digit":"HH"},hour:{numeric:"h","2-digit":"hh"},minute:{numeric:"m","2-digit":"mm"},second:{numeric:"s","2-digit":"ss"},timeZoneName:{long:"ZZZZZ",short:"ZZZ"}};let ar;function or(e){return!!e&&!!e.invalidReason}function ur(e,t){return Array.prototype.concat(...e.map((e=>{return r=t,e.literal||null==(r=hr(Ke.macroTokenToFormatOpts(e.val),r))||r.includes(void 0)?e:r;var r})))}function lr(e,t,r){var s=(r=ur(Ke.parseFormat(r),e)).map((t=>{{var r=t,s=e;const n=Bt(s),i=Bt(s,"{2}"),a=Bt(s,"{3}"),o=Bt(s,"{4}"),u=Bt(s,"{6}"),l=Bt(s,"{1,2}"),c=Bt(s,"{1,3}"),h=Bt(s,"{1,6}"),d=Bt(s,"{1,9}"),m=Bt(s,"{2,4}"),f=Bt(s,"{4,6}"),y=e=>({regex:RegExp(e.val.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")),deser:([e])=>e,literal:!0});return t=(e=>{if(r.literal)return y(e);switch(e.val){case"G":return rr(s.eras("short"),0);case"GG":return rr(s.eras("long"),0);case"y":return Qt(h);case"yy":case"kk":return Qt(m,qe);case"yyyy":case"kkkk":return Qt(o);case"yyyyy":return Qt(f);case"yyyyyy":return Qt(u);case"M":case"L":case"d":case"H":case"h":case"m":case"q":case"s":case"W":return Qt(l);case"MM":case"LL":case"dd":case"HH":case"hh":case"mm":case"qq":case"ss":case"WW":return Qt(i);case"MMM":return rr(s.months("short",!0),1);case"MMMM":return rr(s.months("long",!0),1);case"LLL":return rr(s.months("short",!1),1);case"LLLL":return rr(s.months("long",!1),1);case"o":case"S":return Qt(c);case"ooo":case"SSS":return Qt(a);case"u":return nr(d);case"a":return rr(s.meridiems(),0);case"E":case"c":return Qt(n);case"EEE":return rr(s.weekdays("short",!1),1);case"EEEE":return rr(s.weekdays("long",!1),1);case"ccc":return rr(s.weekdays("short",!0),1);case"cccc":return rr(s.weekdays("long",!0),1);case"Z":case"ZZ":return sr(new RegExp(`([+-]${l.source})(?::(${i.source}))?`),2);case"ZZZ":return sr(new RegExp(`([+-]${l.source})(${i.source})?`),2);case"z":return nr(/[a-z_+-/]{1,256}?/i);default:return y(e)}})(r)||{invalidReason:"missing Intl.DateTimeFormat.formatToParts support"},Object.assign(Object.assign({},t),{token:r})}}));if(n=s.find(or))return{input:t,tokens:r,invalidReason:n.invalidReason};var n=`^${s.map((e=>e.regex)).reduce(((e,t)=>`${e}(${t.source})`),"")}$`,[s,i]=(n=RegExp(n,"i"),function(e,t,r){const s=t.exec(e),n={};if(null!==s){let e=1;r.forEach((t=>{var r=t.groups?t.groups+1:1;t.literal||(n[t.token.val[0]]=t.deser(s.slice(e,e+r))),e+=r}))}return[s,n]}(t,n,s)),[a,u,l]=i?function(e){let t,r=null;return Te(e.z)&&(r=_.create(e.z)),Te(e.Z)&&(r=r||new ce(+e.Z),t=+e.Z),Te(e.q)&&(e.M=3*(e.q-1)+1),Te(e.h)&&(+e.h<12&&1===e.a?e.h=e.h+12:12===e.h&&0===e.a&&(e.h=0)),0===e.G&&e.y&&(e.y=-e.y),Te(e.u)&&(e.S=Ve(e.u)||0),[Object.keys(e).reduce(((t,r)=>{var s=(e=>{switch(e){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":case"H":return"hour";case"d":return"day";case"o":return"ordinal";case"L":case"M":return"month";case"y":return"year";case"E":case"c":return"weekday";case"W":return"weekNumber";case"k":return"weekYear";case"q":return"quarter";default:return null}})(r);return s&&(t[s]=e[r]),t}),{}),r,t]}(i):[null,null,void 0];if("a"in i&&"H"in i)throw new o("Can't include meridiem when specifying 24-hour format");return{input:t,tokens:r,regex:n,rawMatches:s,matches:i,result:a,zone:u,specificOffset:l}}function cr(e){return e.replace(/\u202F/g," ")}function hr(e,t){if(!e)return null;var r=(t=Ke.create(t,e).dtFormatter(ar=void 0===ar?zr.fromMillis(1555555555555,{locale:t.locale}):ar)).formatToParts();const s=t.resolvedOptions();return r.map((t=>{{var r=e,n=s,{type:t,value:i}=t;if("literal"===t)return{literal:!(a=/^\s+$/.test(i)),val:a?" ":i};var a=r[t];let o=t,u=("hour"===t&&(o=null!=r.hour12?r.hour12?"hour12":"hour24":null!=r.hourCycle?"h11"===r.hourCycle||"h12"===r.hourCycle?"hour12":"hour24":n.hour12?"hour12":"hour24"),ir[o]);return(u="object"==typeof u?u[a]:u)?{literal:!1,val:u}:void 0}}))}const dr=[0,31,59,90,120,151,181,212,243,273,304,334],mr=[0,31,60,91,121,152,182,213,244,274,305,335];function fr(e,t){return new zt("unit out of range",`you specified ${t} (of type ${typeof t}) as a ${e}, which is invalid`)}function yr(e,t,r){return t=new Date(Date.UTC(e,t-1,r)),e<100&&0<=e&&t.setUTCFullYear(t.getUTCFullYear()-1900),0===(r=t.getUTCDay())?7:r}function _r(e,t,r){return r+(Ze(e)?mr:dr)[t-1]}function gr(e,t){var r=(e=Ze(e)?mr:dr).findIndex((e=>e<t));return{month:r+1,day:t-e[r]}}function vr(e){var{year:t,month:r,day:s}=e,n=_r(t,r,s),r=yr(t,r,s);let i,a=Math.floor((n-r+10)/7);return a<1?(i=t-1,a=Ae(i)):a>Ae(t)?(i=t+1,a=1):i=t,Object.assign({weekYear:i,weekNumber:a,weekday:r},He(e))}function pr(e){var{weekYear:t,weekNumber:r,weekday:s}=e,n=yr(t,1,4),i=Fe(t);let a,o=7*r+s-n-3;o<1?(a=t-1,o+=Fe(a)):o>i?(a=t+1,o-=Fe(t)):a=t;var{month:r,day:s}=gr(a,o);return Object.assign({year:a,month:r,day:s},He(e))}function wr(e){var{year:t,month:r,day:s}=e,r=_r(t,r,s);return Object.assign({year:t,ordinal:r},He(e))}function Or(e){var{year:t,ordinal:r}=e,{month:r,day:s}=gr(t,r);return Object.assign({year:t,month:r,day:s},He(e))}function br(e){var t=Ne(e.year),r=Ee(e.month,1,12),s=Ee(e.day,1,ze(e.year,e.month));return t?r?!s&&fr("day",e.day):fr("month",e.month):fr("year",e.year)}function Tr(e){var{hour:e,minute:t,second:r,millisecond:s}=e,n=Ee(e,0,23)||24===e&&0===t&&0===r&&0===s,i=Ee(t,0,59),a=Ee(r,0,59),o=Ee(s,0,999);return n?i?a?!o&&fr("millisecond",s):fr("second",r):fr("minute",t):fr("hour",e)}const Sr="Invalid DateTime";function kr(e,t,r){var s=e-60*t*1e3,n=r.offset(s);return t===n?[s,t]:n===(r=r.offset(s-=60*(n-t)*1e3))?[s,n]:[e-60*Math.min(n,r)*1e3,Math.max(n,r)]}function Nr(e,t){return{year:(t=new Date(e+=60*t*1e3)).getUTCFullYear(),month:t.getUTCMonth()+1,day:t.getUTCDate(),hour:t.getUTCHours(),minute:t.getUTCMinutes(),second:t.getUTCSeconds(),millisecond:t.getUTCMilliseconds()}}function Mr(e,t,r){return kr(Le(e),t,r)}function Dr(e,t,r,s,n,i){var{setZone:a,zone:o}=r;return e&&0!==Object.keys(e).length||t?(t=t||o,e=zr.fromObject(e||void 0,Object.assign(Object.assign({},r),{zone:t,specificOffset:i})),a?e:e.setZone(o)):zr.invalid(new zt("unparsable",`the input "${n}" can't be parsed as `+s))}function Er(e,t,r=!0){return e.isValid?Ke.create(ue.create("en-US"),{allowZ:r,forceSimple:!0}).formatDateTimeFromString(e,t):null}const jr={year:0,month:1,day:1,hour:0,minute:0,second:0,millisecond:0},xr={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0},Ir={ordinal:1,hour:0,minute:0,second:0,millisecond:0},Vr=["year","month","day","hour","minute","second","millisecond"],Cr=["weekYear","weekNumber","weekday","hour","minute","second","millisecond"],Zr=["year","ordinal","hour","minute","second","millisecond"];function Fr(e){var t={year:"year",years:"year",quarter:"quarter",quarters:"quarter",month:"month",months:"month",day:"day",days:"day",hour:"hour",hours:"hour",minute:"minute",minutes:"minute",second:"second",seconds:"second",millisecond:"millisecond",milliseconds:"millisecond",weekday:"weekday",weekdays:"weekday",weeknumber:"weekNumber",weeksnumber:"weekNumber",weeknumbers:"weekNumber",weekyear:"weekYear",weekyears:"weekYear",ordinal:"ordinal"}[e.toLowerCase()];if(t)return t;throw new i(e)}class zr{constructor(e){var t,r=e.zone||be.defaultZone;let s,n,i=e.invalid||(Number.isNaN(e.ts)?new zt("invalid timestamp"):null)||(r.isValid?null:zr._unsupportedZone(r));this._ts=Se(e.ts)?be.now():e.ts,i||(e.old&&e.old.ts===this._ts&&e.old.zone.equals(r)?[n,s]=[e.old.c,e.old.o]:(t=r.offset(this._ts),n=Nr(this._ts,t),i=Number.isNaN(n.year)?new zt("invalid input"):null,n=i?void 0:n,s=i?void 0:t)),this._zone=r,this._loc=e.loc||ue.create(),this._invalid=i,this._weekData=null,this._c=n,this._o=s,this._isLuxonDateTime=!0}get invalidExplanation(){return this._invalid?this._invalid.explanation:void 0}get invalidReason(){return this._invalid?this._invalid.reason:void 0}get isValid(){return null===this._invalid}get loc(){return this.isValid?this._loc.clone():void 0}get locale(){return this.isValid?this._loc.locale:void 0}get numberingSystem(){return this.isValid?this._loc.numberingSystem:void 0}get outputCalendar(){return this.isValid?this._loc.outputCalendar:void 0}get zone(){return this._zone}get zoneName(){return this.isValid?this.zone.name:null}get year(){return this.isValid?this._c.year:NaN}get quarter(){return this.isValid?Math.ceil(this._c.month/3):NaN}get month(){return this.isValid?this._c.month:NaN}get day(){return this.isValid?this._c.day:NaN}get hour(){return this.isValid?this._c.hour:NaN}get minute(){return this.isValid?this._c.minute:NaN}get second(){return this.isValid?this._c.second:NaN}get millisecond(){return this.isValid?this._c.millisecond:NaN}get weekYear(){return this.isValid?this._possiblyCachedWeekData(this).weekYear:NaN}get weekNumber(){return this.isValid?this._possiblyCachedWeekData(this).weekNumber:NaN}get weekday(){return this.isValid?this._possiblyCachedWeekData(this).weekday:NaN}get ordinal(){return this.isValid?wr(this._c).ordinal:NaN}get monthShort(){return this.isValid?Pt.months("short",{locObj:this._loc})[this.month-1]:null}get monthLong(){return this.isValid?Pt.months("long",{locObj:this._loc})[this.month-1]:null}get weekdayShort(){return this.isValid?Pt.weekdays("short",{locObj:this._loc})[this.weekday-1]:null}get weekdayLong(){return this.isValid?Pt.weekdays("long",{locObj:this._loc})[this.weekday-1]:null}get offset(){return this.isValid?+this._o:NaN}get offsetNameShort(){return this.isValid?this.zone.offsetName(this._ts,{format:"short",locale:this.locale}):null}get offsetNameLong(){return this.isValid?this.zone.offsetName(this._ts,{format:"long",locale:this.locale}):null}get isOffsetFixed(){return this.isValid?this.zone.isUniversal:null}get isInDST(){return!this.isOffsetFixed&&(this.offset>this.set({month:1,day:1}).offset||this.offset>this.set({month:5}).offset)}get isInLeapYear(){return Ze(this.year)}get daysInMonth(){return ze(this.year,this.month)}get daysInYear(){return this.isValid?Fe(this.year):NaN}get weeksInWeekYear(){return this.isValid?Ae(this.weekYear):NaN}get ts(){return this._ts}static now(){return new zr({})}static local(...e){var[e,t]=this._lastOpts(e),[t,r,s,n,i,a,o]=t;return zr._quickDT({year:t,month:r,day:s,hour:n,minute:i,second:a,millisecond:o},e)}static utc(...e){var[e,t]=this._lastOpts(e),[t,r,s,n,i,a,o]=t;return e.zone=ce.utcInstance,this._quickDT({year:t,month:r,day:s,hour:n,minute:i,second:a,millisecond:o},e)}static fromJSDate(e,t={}){var r;e="[object Date]"===Object.prototype.toString.call(e)?e.valueOf():NaN;return Number.isNaN(e)?zr.invalid("invalid input"):(r=fe(t.zone,be.defaultZone)).isValid?new zr({ts:e,zone:r,loc:ue.fromObject(t)}):zr.invalid(zr._unsupportedZone(r))}static fromMillis(e,t={}){if(ke(e))return e<-864e13||864e13<e?zr.invalid("Timestamp out of range"):new zr({ts:e,zone:fe(t.zone,be.defaultZone),loc:ue.fromObject(t)});throw new u(`fromMillis requires a numerical input, but received a ${typeof e} with value `+e)}static fromSeconds(e,t={}){if(ke(e))return new zr({ts:1e3*e,zone:fe(t.zone,be.defaultZone),loc:ue.fromObject(t)});throw new u("fromSeconds requires a numerical input")}static fromObject(e={},t={}){var r=fe(t.zone,be.defaultZone);if(!r.isValid)return zr.invalid(zr._unsupportedZone(r));var s=be.now(),n=ke(t.specificOffset)?t.specificOffset:r.offset(s),i=Re(e,Fr),a=Te(i.ordinal),u=Te(i.year),l=Te(i.month)||Te(i.day),c=(u=u||l,i.weekYear||i.weekNumber);t=ue.fromObject(t);if((u||a)&&c)throw new o("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(l&&a)throw new o("Can't mix ordinal dates with month/day");return l=c||i.weekday&&!u,c=Nr(s,n),s={containsGregor:u,containsOrdinal:a,loc:t,normalized:i,obj:e,offsetProvis:n,useWeekData:l,zoneToUse:r},l?zr._buildObject(s,Cr,xr,vr(c)):a?zr._buildObject(s,Zr,Ir,wr(c)):zr._buildObject(s,Vr,jr,c)}static fromISO(e,t={}){var[r,s]=tt(e,[Nt,jt],[Mt,xt],[Dt,It],[Et,Vt]);return Dr(r,s,t,"ISO 8601",e)}static fromRFC2822(e,t={}){var[r,s]=tt(e.replace(/\([^()]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim(),[pt,wt]);return Dr(r,s,t,"RFC 2822",e)}static fromHTTP(e,t={}){var[r,s]=tt(e,[Ot,St],[bt,St],[Tt,kt]);return Dr(r,s,t,"HTTP",e)}static fromFormat(e,t,r={}){if(Se(e)||Se(t))throw new u("fromFormat requires an input string and a format");var{locale:s,numberingSystem:n}=r,[s,n,i,a]=function(e,t,r){var{result:e,zone:t,specificOffset:r,invalidReason:s}=lr(e,cr(t),cr(r));return[e,t,r,s]}(ue.fromOpts({locale:s,numberingSystem:n,defaultToEN:!0}),e,t);return a?zr.invalid(a):Dr(s,n||null,r,"format "+t,e,i)}static fromString(e,t,r={}){return zr.fromFormat(e,t,r)}static fromSQL(e,t={}){var[r,s]=tt(e,[Ct,jt],[Zt,Ft]);return Dr(r,s,t,"SQL",e)}static invalid(e,t){if(!e)throw new u("need to specify a reason the DateTime is invalid");if(e=e instanceof zt?e:new zt(e,t),be.throwOnInvalid)throw new r(e);return new zr({invalid:e})}static isDateTime(e){return!(!e||!e._isLuxonDateTime)}static parseFormatForOpts(e,t={}){return(e=hr(e,ue.fromObject(t)))?e.map((e=>e?e.val:null)).join(""):null}static min(...e){if(e.every(zr.isDateTime))return De(e,(e=>e.valueOf()),Math.min);throw new u("min requires all arguments be DateTimes")}static max(...e){if(e.every(zr.isDateTime))return De(e,(e=>e.valueOf()),Math.max);throw new u("max requires all arguments be DateTimes")}static fromFormatExplain(e,t,r={}){var{locale:r,numberingSystem:s}=r;return lr(ue.fromOpts({locale:r,numberingSystem:s,defaultToEN:!0}),e,t)}static fromStringExplain(e,t,r={}){return zr.fromFormatExplain(e,t,r)}static expandFormat(e,t={}){return ur(Ke.parseFormat(e),ue.fromObject(t)).map((e=>e.val)).join("")}static _buildObject(e,t,r,s){let n=!1;var i,a,o,u;return t.forEach((t=>{Te(e.normalized[t])?n=!0:e.normalized[t]=n?r[t]:s[t]})),(t=(e.useWeekData?(i=Ne((t=e.normalized).weekYear),a=Ee(t.weekNumber,1,Ae(t.weekYear)),o=Ee(t.weekday,1,7),i?a?!o&&fr("weekday",t.weekday):fr("week",t.weekNumber):fr("weekYear",t.weekYear)):e.containsOrdinal?(a=Ne((i=e.normalized).year),o=Ee(i.ordinal,1,Fe(i.year)),a?!o&&fr("ordinal",i.ordinal):fr("year",i.year)):br(e.normalized))||Tr(e.normalized))?zr.invalid(t):([t,u]=Mr(e.useWeekData?pr(e.normalized):e.containsOrdinal?Or(e.normalized):e.normalized,e.offsetProvis,e.zoneToUse),t=new zr({ts:t,zone:e.zoneToUse,o:u,loc:e.loc}),e.normalized.weekday&&e.containsGregor&&e.obj.weekday!==t.weekday?zr.invalid("mismatched weekday",`you can't specify both a weekday of ${e.normalized.weekday} and a date of `+t.toISO()):t)}static _lastOpts(e){let t,r={};return t=0<e.length&&"object"==typeof e[e.length-1]?(r=e.pop(),e):Array.from(e),[r,t]}static _quickDT(e,t){var r=fe(t.zone,be.defaultZone),s=(t=ue.fromObject(t),be.now());let n,i;if(Te(e.year)){for(const t of Vr)Se(e[t])&&(e[t]=jr[t]);var a=br(e)||Tr(e);if(a)return zr.invalid(a);a=r.offset(s),[n,i]=Mr(e,a,r)}else n=s;return new zr({ts:n,zone:r,loc:t,o:i})}static _diffRelative(e,t,r){const s=!!Se(r.round)||r.round,n=(e,n)=>(e=Ce(e,s||r.calendary?0:2,!0),t._loc.clone(r).relFormatter(r).format(e,n)),i=s=>r.calendary?t.hasSame(e,s)?0:t.startOf(s).diff(e.startOf(s),s).get(s):t.diff(e,s).get(s);if(r.unit)return n(i(r.unit),r.unit);for(const e of r.units){var a=i(e);if(1<=Math.abs(a))return n(a,e)}return n(t<e?-0:0,r.units[r.units.length-1])}static _unsupportedZone(e){return new zt("unsupported zone",`the zone "${e.name}" is not supported`)}get(e){return this[e]}getPossibleOffsets(){var e,t,r,s;return this.isValid&&!this.isOffsetFixed&&(e=Le(this._c),r=this.zone.offset(e-864e5),s=this.zone.offset(e+864e5),(r=this.zone.offset(e-6e4*r))!==(s=this.zone.offset(e-6e4*s)))&&(t=e-6e4*s,r=Nr(e-=6e4*r,r),s=Nr(t,s),r.hour===s.hour)&&r.minute===s.minute&&r.second===s.second&&r.millisecond===s.millisecond?[this._clone({ts:e}),this._clone({ts:t})]:[this]}resolvedLocaleOptions(e={}){var{locale:e,numberingSystem:t,calendar:r}=Ke.create(this._loc.clone(e),e).resolvedOptions(this);return{locale:e,numberingSystem:t,outputCalendar:r}}toLocal(){return this.setZone(be.defaultZone)}toUTC(e=0,t={}){return this.setZone(ce.instance(e),t)}setZone(e,{keepLocalTime:t=!1,keepCalendarTime:r=!1}={}){if((e=fe(e,be.defaultZone)).equals(this.zone))return this;if(e.isValid){let s=this._ts;return(t||r)&&(t=e.offset(this._ts),s=Mr(r=this.toObject(),t,e)[0]),this._clone({ts:s,zone:e})}return zr.invalid(zr._unsupportedZone(e))}reconfigure(e){return e=this._loc.clone(e),this._clone({loc:e})}setLocale(e){return this.reconfigure({locale:e})}set(e){if(!this.isValid)return this;var t=Te((e=Re(e,Fr)).weekYear)||Te(e.weekNumber)||Te(e.weekday),r=Te(e.ordinal),s=Te(e.year),n=Te(e.month)||Te(e.day),i=e.weekYear||e.weekNumber;if((s||n||r)&&i)throw new o("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(n&&r)throw new o("Can't mix ordinal dates with month/day");let a;t?a=pr(Object.assign(Object.assign({},vr(this._c)),e)):Se(e.ordinal)?(a=Object.assign(Object.assign({},this.toObject()),e),Se(e.day)&&(a.day=Math.min(ze(a.year,a.month),a.day))):a=Or(Object.assign(Object.assign({},wr(this._c)),e));var[s,i]=Mr(a,this._o,this.zone);return this._clone({ts:s,o:i})}plus(e){return this.isValid?(e=Ut.fromDurationLike(e),this._clone(this._adjustTime(e))):this}minus(e){return this.isValid?(e=Ut.fromDurationLike(e).negate(),this._clone(this._adjustTime(e))):this}startOf(e){if(!this.isValid)return this;var t={};switch(e=Ut.normalizeUnit(e)){case"years":t.month=1;case"quarters":case"months":t.day=1;case"weeks":case"days":t.hour=0;case"hours":t.minute=0;case"minutes":t.second=0;case"seconds":t.millisecond=0}return"weeks"===e&&(t.weekday=1),"quarters"===e&&(e=Math.ceil(this.month/3),t.month=3*(e-1)+1),this.set(t)}endOf(e){return this.plus({[e]:1}).startOf(e).minus({milliseconds:1})}toFormat(e,t={}){return this.isValid?Ke.create(this._loc.redefaultToEN(t)).formatDateTimeFromString(this,e):Sr}toLocaleString(e=g,t={}){return this.isValid?Ke.create(this._loc.clone(t),e).formatDateTime(this):Sr}toLocaleParts(e={}){return this.isValid?Ke.create(this._loc.clone(e),e).formatDateTimeParts(this):[]}toISO({format:e="extended",suppressSeconds:t=!1,suppressMilliseconds:r=!1,includeOffset:s=!0,extendedZone:n=!1}={}){return this.isValid?[this._toISODate(e="extended"===e),"T",this._toISOTime(e,t,r,s,n)].join(""):null}toISODate(e={format:"extended"}){let t="basic"===e.format?"yyyyMMdd":"yyyy-MM-dd";return Er(this,t=9999<this.year?"+"+t:t)}toISOWeekDate(){return Er(this,"kkkk-'W'WW-c")}toISOTime({suppressMilliseconds:e=!1,suppressSeconds:t=!1,includeOffset:r=!0,includePrefix:s=!1,extendedZone:n=!1,format:i="extended"}={}){return this.isValid?[s?"T":"",this._toISOTime("extended"===i,t,e,r,n)].join(""):null}toRFC2822(){return Er(this,"EEE, dd LLL yyyy HH:mm:ss ZZZ",!1)}toHTTP(){return Er(this.toUTC(),"EEE, dd LLL yyyy HH:mm:ss 'GMT'")}toSQLDate(){return this.isValid?this._toISODate(!0):null}toSQLTime({includeOffset:e=!0,includeZone:t=!1,includeOffsetSpace:r=!0}={}){let s="HH:mm:ss.SSS";return(t||e)&&(r&&(s+=" "),t?s+="z":e&&(s+="ZZ")),Er(this,s,!0)}toSQL(e={}){return this.isValid?this.toSQLDate()+" "+this.toSQLTime(e):null}toString(){return this.isValid?this.toISO():Sr}valueOf(){return this.toMillis()}toMillis(){return this.isValid?this.ts:NaN}toSeconds(){return this.isValid?this._ts/1e3:NaN}toUnixInteger(){return this.isValid?Math.floor(this.ts/1e3):NaN}toJSON(){return this.toISO()}toBSON(){return this.toJSDate()}toObject(e={includeConfig:!1}){var t;return this.isValid?(t=Object.assign({},this._c),e.includeConfig&&(t.outputCalendar=this.outputCalendar,t.numberingSystem=this._loc.numberingSystem,t.locale=this._loc.locale),t):{}}toJSDate(){return new Date(this.isValid?this._ts:NaN)}diff(e,t="milliseconds",r={}){var s,n,i;return this.isValid&&e.isValid?(t=(Array.isArray(t)?t:[t]).map(Ut.normalizeUnit),i=((e,t,r,s)=>{let[n,i,a,o]=function(e,t,r){var s,n,i={},a=e;let o,u;for([s,n]of[["years",(e,t)=>t.year-e.year],["quarters",(e,t)=>t.quarter-e.quarter+4*(t.year-e.year)],["months",(e,t)=>t.month-e.month+12*(t.year-e.year)],["weeks",(e,t)=>((e=Ht(e,t))-e%7)/7],["days",Ht]])0<=r.indexOf(s)&&(i[o=s]=n(e,t),(u=a.plus(i))>t?(i[s]--,t<(e=a.plus(i))&&(u=e,i[s]--,e=a.plus(i))):e=u);return[e,i,u,o]}(e,t,r);return e=+t-+n,r=r.filter((e=>0<=["hours","minutes","seconds","milliseconds"].indexOf(e))),0===r.length&&(a=a<t?n.plus({[o]:1}):a)!==n&&(i[o]=(i[o]||0)+e/(+a-+n)),t=Ut.fromObject(i,s),0<r.length?Ut.fromMillis(e,s).shiftTo(...r).plus(t):t})(i=(s=e.valueOf()>this.valueOf())?this:e,n=s?e:this,t,Object.assign({locale:this.locale,numberingSystem:this.numberingSystem},r)),s?i.negate():i):(n=this.invalidReason||e.invalidReason,Ut.invalid(n,"created by diffing an invalid DateTime"))}diffNow(e="milliseconds",t={}){return this.diff(zr.now(),e,t)}until(e){return Rt.fromDateTimes(this,e)}hasSame(e,t){var r;return!!this.isValid&&(r=e.valueOf(),+(e=this.setZone(e.zone,{keepLocalTime:!0})).startOf(t)<=r)&&r<=+e.endOf(t)}equals(e){return this.valueOf()===e.valueOf()&&this.zone.equals(e.zone)&&this._loc.equals(e._loc)}toRelative(e={}){if(!this.isValid)return null;var t=e.base||zr.fromObject({},{zone:this.zone}),r=e.padding?this<t?-e.padding:e.padding:0;let s=["years","months","days","hours","minutes","seconds"],n=e.unit;return Array.isArray(e.unit)&&(s=e.unit,n=void 0),zr._diffRelative(t,this.plus(r),Object.assign(Object.assign({},e),{numeric:"always",units:s,unit:n}))}toRelativeCalendar(e={}){return this.isValid?zr._diffRelative(e.base||zr.fromObject({},{zone:this.zone}),this,Object.assign(Object.assign({},e),{numeric:"auto",units:["years","months","days"],calendary:!0})):null}_possiblyCachedWeekData(e){return null===e._weekData&&(e._weekData=vr(e._c)),e._weekData}_clone(e){var t={ts:this._ts,zone:this.zone,c:this._c,o:this._o,loc:this._loc,invalid:this._invalid||void 0};return new zr(Object.assign(Object.assign(Object.assign({},t),e),{old:t}))}_adjustTime(e){var t=this._o,r=this._c.year+Math.trunc(e.years),s=this._c.month+Math.trunc(e.months)+3*Math.trunc(e.quarters);r=Object.assign(Object.assign({},this._c),{year:r,month:s,day:Math.min(this._c.day,ze(r,s))+Math.trunc(e.days)+7*Math.trunc(e.weeks)}),s=Ut.fromObject({years:e.years-Math.trunc(e.years),quarters:e.quarters-Math.trunc(e.quarters),months:e.months-Math.trunc(e.months),weeks:e.weeks-Math.trunc(e.weeks),days:e.days-Math.trunc(e.days),hours:e.hours,minutes:e.minutes,seconds:e.seconds,milliseconds:e.milliseconds}).as("milliseconds");let[n,i]=kr(Le(r),t,this.zone);return 0!==s&&(n+=s,i=this.zone.offset(n)),{ts:n,o:i}}_toISODate(e){var t=9999<this._c.year||this._c.year<0;let r="";return t&&0<=this._c.year&&(r+="+"),r+=je(this._c.year,t?6:4),e?(r=(r+="-")+je(this._c.month)+"-")+je(this._c.day):(r+=je(this._c.month))+je(this._c.day)}_toISOTime(e,t,r,s,n){let i=je(this._c.hour);return e?(i=(i+=":")+je(this._c.minute),0===this._c.millisecond&&0===this._c.second&&t||(i+=":")):i+=je(this._c.minute),0===this._c.millisecond&&0===this._c.second&&t||(i+=je(this._c.second),0===this._c.millisecond&&r)||(i=(i+=".")+je(this._c.millisecond,3)),s&&(this.isOffsetFixed&&0===this.offset&&!n?i+="Z":i=this._o<0?(i=(i+="-")+je(Math.trunc(-this._o/60))+":")+je(Math.trunc(-this._o%60)):(i=(i+="+")+je(Math.trunc(this._o/60))+":")+je(Math.trunc(this._o%60))),n&&(i+="["+this.zone.ianaName+"]"),i}}zr.DATE_SHORT=g,zr.DATE_MED=v,zr.DATE_MED_WITH_WEEKDAY=p,zr.DATE_FULL=w,zr.DATE_HUGE=O,zr.TIME_SIMPLE=b,zr.TIME_WITH_SECONDS=T,zr.TIME_WITH_SHORT_OFFSET=S,zr.TIME_WITH_LONG_OFFSET=k,zr.TIME_24_SIMPLE=N,zr.TIME_24_WITH_SECONDS=M,zr.TIME_24_WITH_SHORT_OFFSET=D,zr.TIME_24_WITH_LONG_OFFSET=E,zr.DATETIME_SHORT=j,zr.DATETIME_SHORT_WITH_SECONDS=x,zr.DATETIME_MED=I,zr.DATETIME_MED_WITH_SECONDS=V,zr.DATETIME_MED_WITH_WEEKDAY=C,zr.DATETIME_FULL=Z,zr.DATETIME_FULL_WITH_SECONDS=F,zr.DATETIME_HUGE=z,zr.DATETIME_HUGE_WITH_SECONDS=L,e.DateTime=zr,e.Duration=Ut,e.FixedOffsetZone=ce,e.IANAZone=_,e.Info=Pt,e.Interval=Rt,e.Intl=d,e.InvalidZone=he,e.ORDERED_UNITS=Je,e.REVERSE_ORDERED_UNITS=Ye,e.Settings=be,e.SystemZone=me,e.VERSION="4.4.0",e.Zone=h,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
